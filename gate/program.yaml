# Config from https://community.home-assistant.io/t/4-channel-relay-esp8266-wifi-board-working-with-esphome/120594/48
# curl -X POST http://gate/switch/relay1/turn_off
substitutions:
  name: commandline_flag

esphome:
  name: $name
  platform: ESP8266
  board: esp8285
  esp8266_restore_from_flash: true

<<: !include  ../common.yaml

uart:
  baud_rate: 115200 # speed to STC15L101EW
  tx_pin: GPIO1
  rx_pin: GPIO3

switch:
  - platform: template
    name: 'Gate(ON=closed)'
    id: gate
    optimistic: true
    restore_state: true
  - platform: template
    name: 'Automatic Mode(ON=automatic)'
    id: automatic
    optimistic: true
    restore_state: true
    turn_off_action:
      switch.turn_off: gate
  - platform: template
    name: 'relay1'
    id: relay1
    turn_on_action:
      - uart.write: [0xA0, 0x01, 0x01, 0xA2]
    turn_off_action:
      - uart.write: [0xA0, 0x01, 0x00, 0xA1]
    optimistic: true
  - platform: template
    name: 'relay2'
    id: relay2
    turn_on_action:
      - uart.write: [0xA0, 0x02, 0x01, 0xA3]
    turn_off_action:
      - uart.write: [0xA0, 0x02, 0x00, 0xA2]
    optimistic: true
# logging
debug:
web_server:
  port: 80
prometheus:

interval:
- interval: 1s
  then:
    if:
      condition:
        # Same syntax for is_off
        switch.is_on: gate
      then:
        - switch.turn_on: relay1
        - delay: 50ms
        - switch.turn_on: relay2
      else:
        - switch.turn_off: relay1
        - delay: 50ms
        - switch.turn_off: relay2
- interval: 1min
  then:
    if:
      condition:
        and:
        - switch.is_on: automatic
      then:
        if:
          condition:
          - lambda: |-
              auto time = id(sntp_time).now();
              ESP_LOGD("decision", "The value of sensor is: %d", time.hour);
              return ((time.hour < 8) || (time.hour >= 21));
          then:
            if:
              condition:
                switch.is_off: gate
              then:
              - switch.turn_on: gate
              - logger.log: switching gate on
          else:
            if:
              condition:
                switch.is_on: gate
              then:
              - switch.turn_off: gate
              - logger.log: switching gate off
