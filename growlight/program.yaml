substitutions:
   name: replace_me

esphome:
  name: ${name}
  platform: ESP8266
  board: esp01_1m
  esp8266_restore_from_flash: true

<<: !include  ../common.yaml

dallas:
  - pin: GPIO2
    update_interval: 1s

sensor:
  - platform: dallas
    name: temperature
    id: temperature
    address: 0xEF01191B2D357328

uart:
  baud_rate: 115200
  tx_pin: GPIO1
  rx_pin: GPIO3

switch:
  - platform: restart
    name: "Restart"
  - platform: template
    name: 'relay1'
    id: relay1
    turn_on_action:
      - uart.write: [0xA0, 0x01, 0x01, 0xA2]
    turn_off_action:
      - uart.write: [0xA0, 0x01, 0x00, 0xA1]
    optimistic: true
  - platform: template
    name: 'relay2'
    id: relay2
    turn_on_action:
      - uart.write: [0xA0, 0x02, 0x01, 0xA3]
    turn_off_action:
      - uart.write: [0xA0, 0x02, 0x00, 0xA2]
    optimistic: true
  - platform: template
    name: 'lights'
    id: lights
    turn_on_action:
      - uart.write: [0xA0, 0x03, 0x01, 0xA4]
    turn_off_action:
      - uart.write: [0xA0, 0x03, 0x00, 0xA3]
    optimistic: true
  - platform: template
    name: 'pump'
    id: pump
    turn_on_action:
      - uart.write: [0xA0, 0x04, 0x01, 0xA5]
    turn_off_action:
      - uart.write: [0xA0, 0x04, 0x00, 0xA4]
    optimistic: true
  - platform: template
    name: 'Schedule 7>=schedule<16'
    id: schedule
    optimistic: true
    restore_state: true
    assumed_state: true
    turn_on_action:
    - script.execute: schedule_tick
    turn_off_action:
    - script.execute: schedule_tick

interval:
  - interval: 1s
    then:
      - script.execute: schedule_tick
script:
  - id: schedule_tick
    then:
      - lambda: |-
          auto time = id(sntp_time).now();
          auto timestamp = time.timestamp;
          if (!id(schedule).state) {
            return;
          }
          bool isTempSafe = id(temperature).state < 45;
          bool isRunWindow = (time.hour >= 8 && time.hour < 18);
          bool turnOnLights = isRunWindow && isTempSafe;
          if (isRunWindow) {
            id(pump).turn_on();
          } else {
            id(pump).turn_off();
          }
          if (turnOnLights) {
            id(lights).turn_on();
          } else {
            id(lights).turn_off();
          }